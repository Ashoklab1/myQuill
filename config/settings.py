"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv # Make sure you have python-dotenv installed (pip install python-dotenv)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load environment variables from .env file
# The .env file should be in the same directory as manage.py (BASE_DIR)
load_dotenv(os.path.join(BASE_DIR, '.env'))

# üîê Secret Key from environment (never hardcode in production)
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY")

# ‚ùó Don't show debug info in production
DEBUG = os.getenv('DJANGO_DEBUG', 'False') == 'True' # Default to False if not set

# üåç Add PythonAnywhere domain and local hosts
ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'ashoklab.pythonanywhere.com']

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ckeditor',
    # Your custom apps
    'myQuill.apps.MyquillConfig', # Correct way to register your myQuill app
    # Corrected: Register 'users' app using its AppConfig path
    'users.apps.UsersConfig', # Assuming your users app has an apps.py with UsersConfig
]
# üõ° Middleware
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls' # Your main project's urls.py


TEMPLATES = [
        {
            'BACKEND': 'django.template.backends.django.DjangoTemplates',
            # This line is CRUCIAL for finding templates in your project's main 'templates' folder
            'DIRS': [BASE_DIR / 'templates'],
            'APP_DIRS': True, # This tells Django to look in app-specific 'templates' folders too
            'OPTIONS': {
                'context_processors': [
                    'django.template.context_processors.request',
                    'django.template.context_processors.debug',
                    'django.contrib.auth.context_processors.auth',
                    'django.contrib.messages.context_processors.messages',
                ],
            },
        },
    ]


WSGI_APPLICATION = 'config.wsgi.application' # Your main project's wsgi.py


# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Kolkata' # Set to your local timezone for accurate timestamps
USE_I18N = True
USE_TZ = True # Use timezone-aware datetimes

# Static files (CSS, JavaScript, Images)
STATIC_URL = 'static/'
# Where Django will look for static files during development
STATICFILES_DIRS = [BASE_DIR / 'static']
# Where `python manage.py collectstatic` will gather all static files for production
STATIC_ROOT = BASE_DIR / 'assets'

# Media files (user-uploaded content like post banners, gallery images)
MEDIA_URL = '/media/'
# Where user-uploaded files will be stored
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CKEditor Configuration
CKEDITOR_UPLOAD_PATH = "content/ckeditor/"
CKEDITOR_IMAGE_BACKEND = "pillow" # Ensure Pillow is installed (pip install Pillow)
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'full',
        'height': 300,
        'width': '100%',
    },
}

# User Authentication Redirects (for django.contrib.auth)
LOGIN_REDIRECT_URL = 'myQuill:post_list' # Redirect to posts list after login
LOGOUT_REDIRECT_URL = 'home' # Redirect to home page after logout (assuming 'home' is a named URL in config/urls.py)
LOGIN_URL = 'users:login' # URL for login page (used by @login_required decorator)
